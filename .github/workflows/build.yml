name: Build ZMK Firmware

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:3.5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Init West (pull ZMK via manifest)
        run: |
          # Garante que o PATH contenha o west da imagem
          export PATH="$HOME/.local/bin:/root/.local/bin:$PATH"
          echo "$PATH"
      
          # Verifica se west está instalado
          west --version || echo "West não encontrado no PATH"
      
          # Inicializa o workspace
          west init -l config
          west update
          west zephyr-export
      
          # Instala dependências de Python do Zephyr (se disponíveis)
          if [ -f zephyr/scripts/requirements.txt ]; then
            python3 -m pip install --user -r zephyr/scripts/requirements.txt || true
          fi



      - name: Build LEFT
        run: |
          west build -s zmk/app -d build/left -b nice_nano_v2 -- \
            -DSHIELD=sofle_left \
            -DZMK_CONFIG=${GITHUB_WORKSPACE}/config \
            -DCONFIG_ZMK_STUDIO=y \
            -DSNIPPET=studio-rpc-usb-uart

      - name: Build RIGHT
        run: |
          west build -s zmk/app -d build/right -b nice_nano_v2 -- \
            -DSHIELD=sofle_right \
            -DZMK_CONFIG=${GITHUB_WORKSPACE}/config \
            -DCONFIG_ZMK_STUDIO=y \
            -DSNIPPET=studio-rpc-usb-uart

      - name: Build SETTINGS_RESET
        run: |
          west build -s zmk/app -d build/reset -b nice_nano_v2 -- \
            -DSHIELD=settings_reset \
            -DZMK_CONFIG=${GITHUB_WORKSPACE}/config

      - name: Upload Firmware Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: |
            build/left/zephyr/zmk.uf2
            build/right/zephyr/zmk.uf2
            build/reset/zephyr/zmk.uf2
