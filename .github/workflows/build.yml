name: Build ZMK Firmware

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:3.5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Init West (pull ZMK via manifest)
        run: |
          # Garante que o PATH contenha o west da imagem
          export PATH="$HOME/.local/bin:/root/.local/bin:$PATH"
          echo "$PATH"
      
          # Verifica se west está instalado
          west --version || echo "West não encontrado no PATH"
      
          # Inicializa o workspace
          west init -l config
          west update
          west zephyr-export
      
          # Instala dependências de Python do Zephyr (se disponíveis)
          if [ -f zephyr/scripts/requirements.txt ]; then
            python3 -m pip install --user -r zephyr/scripts/requirements.txt || true
          fi

      - name: Build LEFT (standalone p/ Studio)
        run: |
        west build -s zmk/app -p -d build/left -b nice_nano_v2 -- \
          -DSHIELD=sofle_left \
          -DZMK_CONFIG=${GITHUB_WORKSPACE}/config \
          -DSNIPPET=studio-usb  


      # - name: Build LEFT
      #   run: |
      #     west build -s zmk/app -d build/left -b nice_nano_v2 -- \
      #       -DSHIELD=sofle_left \
      #       -DZMK_CONFIG=${GITHUB_WORKSPACE}/config \
      #       -DCONFIG_ZMK_STUDIO=y \
      #       -DSNIPPET=studio-rpc-usb-uart \
      #       -DCONFIG_ZMK_STUDIO_LOCKING=n
      
      # - name: Build RIGHT
      #   run: |
      #     west build -s zmk/app -d build/right -b nice_nano_v2 -- \
      #       -DSHIELD=sofle_right \
      #       -DZMK_CONFIG=${GITHUB_WORKSPACE}/config \
      #       -DCONFIG_ZMK_STUDIO=y \
      #       -DSNIPPET=studio-rpc-usb-uart \
      #       -DCONFIG_ZMK_STUDIO_LOCKING=n

      - name: Build SETTINGS_RESET
        run: |
          west build -s zmk/app -d build/reset -b nice_nano_v2 -- \
            -DSHIELD=settings_reset \
            -DZMK_CONFIG=${GITHUB_WORKSPACE}/config

      - name: Upload Firmware Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: |
            build/left/zephyr/zmk.uf2
            # build/right/zephyr/zmk.uf2
            build/reset/zephyr/zmk.uf2
      - name: Show USB/WebUSB config (left)
        run: |
          echo "---- zephyr/.config USB summary (left) ----"
          grep -E '^(CONFIG_USB=|CONFIG_USB_DEVICE_STACK=|CONFIG_USB_DEVICE_STACK_NEXT=|CONFIG_USB_DEVICE_BOS=|CONFIG_USB_DEVICE_WEBUSB=|CONFIG_USB_DEVICE_WEBUSB_URL=|CONFIG_ZMK_USB=|CONFIG_USB_CDC_ACM=|CONFIG_USB_DEVICE_VID=|CONFIG_USB_DEVICE_PID=)' build/left/zephyr/.config || true

      - name: Upload .config (left)
        uses: actions/upload-artifact@v4
        with:
          name: left-zephyr-config
          path: build/left/zephyr/.config
      - name: Show USB/WebUSB config (left)
        run: |
          grep -E '(^CONFIG_USB=|USB_DEVICE_STACK|WEBUSB|BOS|WEBUSB_URL|ZMK_USB|CDC_ACM|USB_DEVICE_VID|USB_DEVICE_PID)' build/left/zephyr/.config || true
      - name: Show USB/WebUSB config (left)
        run: |
          echo "---- zephyr/.config USB summary (left) ----"
          grep -E '^(CONFIG_USB=|CONFIG_USB_DEVICE_STACK=|CONFIG_USB_DEVICE_STACK_NEXT=|CONFIG_USB_DEVICE_BOS=|CONFIG_USB_DEVICE_WEBUSB=|CONFIG_USB_DEVICE_WEBUSB_URL=|CONFIG_ZMK_USB=|CONFIG_USB_CDC_ACM=|CONFIG_USB_DEVICE_VID=|CONFIG_USB_DEVICE_PID=)' build/left/zephyr/.config || true
      - name: Show Studio/ZMK config (left)
        run: |
          echo "---- merged configs ----"
          grep -E 'ZMK_STUDIO|ZMK_USB' build/left/zephyr/.config || true
          grep -R "Applying snippet 'studio" build/left/zephyr/.ninja_log 2>/dev/null || true
